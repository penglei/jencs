module FeedsUC
{
	//文本内容结构，可以包含@，url，以及纯文本格式。
	struct RichMsg
	{
		0 require int type;     //纯文本0，@结构1，url 2
		1 optional string content;   //存文本内容
		2 optional string uin;       //存@的uin，若校友存校友加密串，若微博存微博id
		3 optional string name;      //存@的nick，相应平台的nick
		4 optional int who;          //存@的who，1，空间、2校友、3微博
		5 optional string url;       //url方式时，存跳转url
	};
	
	struct T3Body                       //response（回复）
	{
		0 require string uin;     //回复人
		1 require string nickname;      //回复人呢称
		2 require int ctime;            //回复时间
		3 require vector<RichMsg> msg;           //回复内容
		4 require int  platformid;     //回复平台
		5 require int  platformsubid;  //子平台
		6 require byte modifyflag;      //
		7 optional byte  sceneid=0;     //
		8 optional unsigned int seq;    //ugc中的seq
		9 optional   map<string, string>   extendinfo;   //kv结构扩展
	};
	
	struct T2Body                       //reply（评论）
	{
		0 require string uin;     //评论uin
		1 require string nickname;      //评论人呢称
		2 require int ctime;            //评论时间
		3 require vector<RichMsg> msg;           //评论内容
		4 require int  platformid;     //平台id
		5 require int  platformsubid;  //子平台id
		6 require unsigned int act;     //
		7 require unsigned int seq;     //ugc中的seq
		8 require unsigned int flag;    //
		9 require unsigned int respnum; //回复数
		10 require byte modifyflag;     //
		11 optional vector<T3Body> vt3body; //回复列表
		12 optional byte  sceneid=0;     //
		13 optional   map<string, string>   extendinfo; //kv结构扩展
	};

	//照片所属相册信息
	struct AlbumInfo
	{
		1 require string sAlbumId;		//相册id
		2 require string sAlbumName;	//相册名字
		3 optional string sAlbumConverId;  	//相册的封面ID
		4 optional string sAlbumCoverUrl; 	//相册的封面照片url
		5 optional  vector<RichMsg> sAlbumDesc;          //相册描述
		6 optional string bgid;                //背景id,生成或者更新个性相册时填写
		7 optional string sExtdata;           //保留数据段
		8 optional string sAlbumCoverUrl_en;
		9 optional string sAlbumDesc_en;
		10 optional string sAlbumName_en;
		11 require unsigned int iPrivacy;		//隐私设置
		12 optional int iFlag;                       //1:删除该照片
		13 optional unsigned int iPicNum;            //相册的总照片张数
		14 optional int iAnonymity;                  //0:普通相册;1：个性相册；3：照片墙
		15 optional unsigned int iTpid;              //照片墙模板id
		16 optional  int iBitmap;	//相册bitmap标志位
		17 optional int iNeedAudit;  //评论是否需要审核，为1表需要审核，要填充22字段	f
		18 optional int  iModifyPrivacy;		//modify album时使用
		19 optional string sTpName;           //模板名称,生成或者更新个性相册时填写
		20 optional string sSonaName;           //背景音乐名,生成或者更新个性相册时填写
		21 optional int iSubCmd;             //个性相册的时候，子动作id
		22 optional int iPyPrivacy;             //朋友相册权限
		23 optional int iHandset;             //相册handset字段
		24 optional int iMultiUpNumber;       //该相册最近一次多张上传的张数
		25 optional int iIsFromMultiFeeds;     //是否来自多图feeds,来自多图feeds的单图评论回复，删除等操作，需要走特殊逻辑更新,1标识是多图上传第一张，2标识是多图转载第一张
		26 optional string sBatchUploadId;     //批次上传id,对应strPicRelateInfo.PicBody里的一批图,非批次则为空,多个批次则分多个包
		27 optional int iIsAlbumEmpty;         //相册是否为空，1标识相册里没有图片了，仅删除或移动照片动作时，需要填写（feeds侧若picbody为空，且iIsAlbumEmpty为1，会删除该相册全部feeds）
		28 optional int iIsComplete;           //为1表示一批照片上传的最后一张请求
		29 optional   map<string, string>   extendinfo; 
	};

	//图片不同规格详情
	struct SinglePicDataBody
	{
		0 require   string    url;           //图片url
		1 require   byte      type;          //a小图，m中图，o原图....
		2 optional   int      width;         //宽
		3 optional   int      height;        //高
		4 optional   map<string, string>   extendinfo; 
	};

	//单条信息详情
	struct ItemDataBody
	{
		0 optional   string      itemid;     //id，礼物为礼物id，图片为图片id，装扮为装扮id
		1 optional   string      name;        //名称，如礼物名,
		2 optional   int         type;        //类型，如生日礼物、其它礼物，按业务传过来的分类，如无不填
		3 optional   vector<RichMsg>      desc;    //描述信息，支持@，如果相片描述
		4 optional   vector<SinglePicDataBody>  picinfo;    //图片信息，同一张图的不同规格。
		
		5 optional   int      pictype;    //图片类型
		6 optional   int      picfrom;    //图片来源
		7 optional   int      width;      //原始宽
		8 optional   int      height;    //原始高
		9 optional   string   vidiourl;        //若为视频，填视频url
		10 optional   string   audiourl;        //若为音频，填音频url
		11 optional   string   duration;        //视频 或者 音视频时长
		12 optional   unsigned int ctime;       //
		13 optional   string authoruin;         //发起人
		14 optional   string      authorname;    //发起人呢称
		15 optional   string   action;
		16 optional   string   albumid;         //相册、或者音乐专辑id
		17 optional   string   albumname;       //名称
		18 optional   map<string, string>   extendinfo;
	};

	struct OrgDataBody        //原始内容
	{
		0 require string uin;       //原贴人uin
		1 require string nickname;  //原贴人nick
		2 require unsigned int subtype;  //子类型
		3 require string subtypename;  //子类型名称
		4 require unsigned int action;   //动作，1发表、2修改……
		5 require string   mkey;         //主贴id
		6 require unsigned int ctime;    //发表时间, strtime
		7 require int     platformid;    //发表平台
		8 require int  platformsubid;    //子平台
		9 require int  itemcount;        //item的数量
		10 optional  vector<ItemDataBody>  itemdata;    //item信息，比如礼物列表、装扮列表、图片列表等
		11 optional unsigned int accessright;   //权限信息
		12 optional unsigned int accessright_py;   //权限信息
		13 optional   vector<RichMsg>      title;   //标题
		14 optional   vector<RichMsg>      desc;    //描述，如无可不填
		15 optional   vector<RichMsg>      content;  //内容
		16 optional  string      likekey;   //赞的key
		17 optional  string      mediatype;  //媒体类型
		18 optional  string      srcurl;     //源的url
		19 optional   AlbumInfo   albumdata;    //相册信息
		20 optional   map<string, string>   extendinfo;  
	};
	
	struct RelyBody         //动作链条，比如转发、分享、参与等
	{
		0 require string uin;     //动作人uin
		1 require string nickname;      //呢称
		2 require unsigned int action;    //动作类型，转发、分享
		3 optional string   mkey;        //主贴id
		4 optional unsigned int ctime;   //时间
		5 optional int     platformid;   //动作发生平台
		6 optional int  platformsubid;   //子平台
		7 optional vector<RichMsg> msg;     //动作描述信息，如分享理由
		8 optional  string      likekey;    //赞的key
		9 optional   map<string, string>   extendinfo;
	};
	
	struct OpratorInfo        //当前操作，如果是发表类的，除option外其它信息不填，直接用orgdata或者relybody
	{
		0 require unsigned int action;   //操作类型，如评论、回复等
		1 optional string opuin;   //操作人uin
		2 optional string nickname;
		3 optional unsigned int ctime;  //操作时间
		4 optional int     platformid;  //操作平台
		5 optional int  platformsubid;   //子平台
		6 optional T2Body  t2body;   //如果是回复，当时回复的评论回复详情
		7 optional map<string, string>   extendinfo;
	};

	//LBS信息详情
	struct LbsInfo
	{
		0 require string lbs_name;
		1 require string lbs_id;
		2 require string lbs_idname;
		3 require string lbs_pos_x;
		4 require string lbs_pos_y;
	};

	//投票相关信息
	struct VoteInfo
	{
		0 require string vote_id;
		1 optional vector<RichMsg> vote_title;
		2 optional vector<RichMsg> vote_desc;
		3 optional vector<RichMsg> vote_result;
		4 optional int vote_num;
		5 optional string vote_privi;
		6 optional string vote_limit;
		7 optional string vote_source;
		8 optional string vote_owner;
		9 optional string vote_topicid;
		10 optional vector<string> vote_option;
		11 optional map<string, string>   extendinfo;
	};

	//附件相关信息
	struct AttachInfo
	{
		0 require string owner;
		1 require string name;
		2 require string size;
		3 require string path;
		4 optional map<string, string>   extendinfo;
	};

	//Feeds主结构
	struct FeedsSummary
	{
		0 require   byte               version;
		1 require   OrgDataBody        orgdata;
		2 optional  vector<RelyBody>   relybody;
		3 optional  OpratorInfo        opinfo;				//被动feeds才有用
		4 optional  vector<T2Body>     vt2body;
		4 optional  int                vt2count;
		5 optional  LbsInfo            lbsdata;
		6 optional  VoteInfo           votedata;
		7 optional  vector<AttachInfo>  attachdata;
		8 optional   map<string, string>   extendKVinfo;      //key-value的可扩展结构，用于自动化处理。
		9 optional   map<string, string>   extendWupinfo;     //wup的可扩展结构，用于一些极端情况，无法用kv结构表达的情况。
	};
};