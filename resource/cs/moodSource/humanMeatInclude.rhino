/**
 * @fileoverview F4A 合并文件
 * @author 
 * @version 
 */
/*load JS Library*/
var INPUT_PATH = (arguments[0] || ".") + "/";

try {
	load(INPUT_PATH + "./Rhino/API/io.js");
	load(INPUT_PATH + "./Rhino/API/jsmin.js");
	IO.setEncoding("GBK");
} 
catch (e) {
	print('Base input path error, please input the path. ');
}

/**
 * 执行脚本的环境地址
 */
var USER_DIR = arguments[1] || environment["user.dir"];

/**
 * 合并后的注释
 */
var COMMENT = "  Qzone Project By Qzone SNS Group. \n  Copyright 2008 - 2010";

/**
 * 不对target进行压缩处理
 */
var NO_MIN = (typeof(arguments[2])=='undefined' || arguments[2]=="false")?true:false;

/**
 * 安静模式，不在屏幕上输出过多信息
 */
var SILENT = false;

var logCache = [];

/**
 * 源文件列表
 * projectName : project
 */
var SOURCE_LIST = {
	// 0：主帖主动 Feed
	"moodTitleT0F0":{
		target: "../moodTitleT0F0.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT0F0.cs'
		]
	},
	"moodSummaryT0F0":{
		target: "../moodSummaryT0F0.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT0F0.cs'
		]
	},
	// 2：被评论回复过的主帖主动Feed
	"moodTitleT2F0":{
		target: "../moodTitleT2F0.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT2F0.cs'
		]
	},
	"moodSummaryT2F0":{
		target: "../moodSummaryT2F0.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT2F0.cs'
		]
	},
	// 2：被评论回复过的主帖被动 Feed
	"moodTitleT2F1":{
		target: "../moodTitleT2F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level2TitleView.cs',
			'level3TitleView.cs',
			'titleT2F1.cs'
		]
	},
	"moodSummaryT2F1":{
		target: "../moodSummaryT2F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level2SummaryView.cs',
			'summaryT2F1.cs'
		]
	},
	// 3：转发被动 Feed
	"moodTitleT3F1":{
		target: "../moodTitleT3F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'forward1TitleView.cs',
			'titleT3F1.cs'
		]
	},
	"moodSummaryT3F1":{
		target: "../moodSummaryT3F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT3F1.cs'
		]
	},
	// 4：发个带 @ 主帖，于是就发个这样的主动 Feed
	"moodTitleT4F0":{
		target: "../moodTitleT4F0.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT4F0.cs'
		]
	},
	"moodSummaryT4F0":{
		target: "../moodSummaryT4F0.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT4F0.cs'
		]
	},
	// 4：发个带 @ 主帖，于是被 @ 的人就收到这样的被动 Feed
	"moodTitleT4F1":{
		target: "../moodTitleT4F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'at1TitleView.cs',
			'titleT4F1.cs'
		]
	},
	"moodSummaryT4F1":{
		target: "../moodSummaryT4F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT4F1.cs'
		]
	},
	// 5：二次或多次转发的主动 Feed
	"moodTitleT5F0":{
		target: "../moodTitleT5F0.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT5F0.cs'
		]
	},
	"moodSummaryT5F0":{
		target: "../moodSummaryT5F0.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT5F0.cs'
		]
	},
	// 5：二次或多次转发的被动 Feed
	"moodTitleT5F1":{
		target: "../moodTitleT5F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'forward2TitleView.cs',
			'titleT5F1.cs'
		]
	},
	"moodSummaryT5F1":{
		target: "../moodSummaryT5F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT5F1.cs'
		]
	},
	// 7：评论或回复过的主贴被评论或回复
	"moodTitleT7F1":{
		target: "../moodTitleT7F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT7F1.cs'
		]
	},
	"moodSummaryT7F1":{
		target: "../moodSummaryT7F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT7F1.cs'
		]
	},
	// 8：转发我的原帖的说说被评论或回复
	"moodTitleT8F1":{
		target: "../moodTitleT8F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'forward1TitleView.cs',
			'titleT8F1.cs'
		]
	},
	"moodSummaryT8F1":{
		target: "../moodSummaryT8F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT8F1.cs'
		]
	},
	// 9：原帖A，我转发了，于是有转发帖B，某人转发了B，于是有转发帖C；
	// B被转发，或者C被评论回复的时候，用这个模板
	"moodTitleT9F1":{
		target: "../moodTitleT9F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT9F1.cs'
		]
	},
	"moodSummaryT9F1":{
		target: "../moodSummaryT9F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT9F1.cs'
		]
	},
	// 10：@我的主贴被转发或评论或回复
	"moodTitleT10F1":{
		target: "../moodTitleT10F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'at2TitleView.cs',
			'titleT10F1.cs'
		]
	},
	"moodSummaryT10F1":{
		target: "../moodSummaryT10F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT10F1.cs'
		]
	},
	// 11：@我的转发贴被转发或评论或回复
	"moodTitleT11F1":{
		target: "../moodTitleT11F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT11F1.cs'
		]
	},
	"moodSummaryT11F1":{
		target: "../moodSummaryT11F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT11F1.cs'
		]
	},
	// 12：转发节点内部纵向通知
	"moodTitleT12F1":{
		target: "../moodTitleT12F1.cs",
		include:[
			'common.cs',
			'common4Title.cs',
			'level1TitleView.cs',
			'titleT12F1.cs'
		]
	},
	"moodSummaryT12F1":{
		target: "../moodSummaryT12F1.cs",
		include:[
			'common.cs',
			'common4Summary.cs',
			'level1SummaryView.cs',
			'summaryT12F1.cs'
		]
	}
};

/**
 * 主进程
 */
function main(){
	if (SILENT) {
		print("processing ...");
	};
	
	log("[Merge Type]:" + (NO_MIN ? "merge" : "min"));
	for (var k in SOURCE_LIST) {
		log("[" + k + "] in process  -----------------------------------------");
		process(SOURCE_LIST[k]);
		log("[" + k + "] builded success ------------------------------------");
		log("");
		log("");
	}
	
	if (SILENT) {
		print("done.");
	};
	
	writeLog();
}

/**
 * 处理进程
 * @param {object} project 项目对象
 */
function process(project/*object*/){
	var _files = project.include;
	var _fileCache = [];
	for (var k in _files) {
		var _fv = IO.readFile(_files[k]);
		log(">> " + _files[k] + "     loaded... " + _fv.length + " byte.");
		_fileCache.push(_fv);
	}
	
	log("");
	log("merge target files...");
	var _bf = _fileCache.join("");
	
	if (project.debugTarget) {
		log("Write file for debug... done.  File length: " + _bf.length + " byte.");
		IO.saveFile(USER_DIR + project.debugTarget, _bf);
	};
	
	if (project.target) {
		log("");
		log("min target file...");
		var _mfv = NO_MIN ? _bf : jsmin("/*\n" + COMMENT + "\n*/", _bf, 2);
		log("Write file for release... done.  File length: " + _mfv.length + " byte.");
		IO.saveFile(USER_DIR + project.target, _mfv);
	};
	log("");
}

/**
 * 记录log
 * @param {Object} str log信息
 */
function log(str){
	logCache.push(str + "\r\n");
	if (!SILENT) {
		print(str);
	}
}

/**
 * 把最近一次log写入文件
 */
function writeLog(){
	var _log = logCache.join("");
	IO.saveFile(USER_DIR + "/merge.log", _log);
}

main();
